name: JPG + MP3 to MP4 Processing

on:
  workflow_dispatch:
    inputs:
      gofile_link:
        description: "Link to the zip file on gofile.io"
        required: true
        type: string

jobs:
  convert_files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests moviepy

      - name: Download and unzip files from gofile.io
        env:
          GOFILE_LINK: ${{ github.event.inputs.gofile_link }}
        run: |
          python -c "
          import requests
          import zipfile
          import os

# Download the zip file from gofile.io
response = requests.get(os.getenv('GOFILE_LINK'))
with open('input_files.zip', 'wb') as file:
    file.write(response.content)

# Unzip the file
with zipfile.ZipFile('input_files.zip', 'r') as zip_ref:
    zip_ref.extractall('input_files')
os.remove('input_files.zip')
print('Downloaded and unzipped the input files.')
          "

      - name: Process JPG + MP3 to MP4
        run: |
          python -c "
from moviepy.editor import ImageClip, AudioFileClip
import glob
import os

os.makedirs('output_videos', exist_ok=True)

jpg_files = sorted(glob.glob('input_files/*.jpg'))
mp3_files = sorted(glob.glob('input_files/*.mp3'))

for jpg, mp3 in zip(jpg_files, mp3_files):
    image_clip = ImageClip(jpg).set_duration(AudioFileClip(mp3).duration)
    audio_clip = AudioFileClip(mp3)
    video_clip = image_clip.set_audio(audio_clip)

    # Output file name
    output_file = os.path.join('output_videos', f'{os.path.basename(jpg).split('.')[0]}.mp4')
    video_clip.write_videofile(output_file, codec='libx264', fps=24)
    print(f'Created {output_file}')
          "

      - name: Zip Output Files
        run: |
          python -c "
import zipfile
import os

with zipfile.ZipFile('output_videos.zip', 'w') as zipf:
    for root, _, files in os.walk('output_videos'):
        for file in files:
            zipf.write(os.path.join(root, file), os.path.relpath(os.path.join(root, file), 'output_videos'))
print('Output files zipped successfully.')
          "

      - name: Upload Output Zip as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: output_videos
          path: output_videos.zip